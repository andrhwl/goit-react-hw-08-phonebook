{"version":3,"file":"static/js/859.5010ac92.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Wrapper/Wrapper.styled.js","components/Wrapper/Wrapper.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-size: 20px;\n  text-align: left;\n  align-items: center;\n`;\n\nexport const FormInput = styled.input`\n  margin-bottom: 20px;\n  font-size: 15px;\n  width: 300px;\n  margin-top: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nexport const FormNames = styled.p`\n  margin: 0;\n  text-shadow: rgb(67, 60, 60) 2px 2px 20px, rgba(30, 30, 30, 0.8) 2px 2px 2px;\n`;\n\nexport const FormButton = styled.button`\n  margin-bottom: 20px;\n  font-size: 16px;\n  padding: 10px;\n  cursor: pointer;\n  background-color: rgb(137, 126, 133);\n  border-radius: 5px;\n  padding: 10px;\n  width: 250px;\n  color: #fff;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  text-align: center;\n  max-width: 760px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Wrapper.styled';\n\nconst Wrapper = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nWrapper.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Wrapper;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Form,\n  FormButton,\n  FormInput,\n  FormLabel,\n  FormNames,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContactThunk,\n  requestContactsThunk,\n  selectUserContacts,\n} from 'redux/contactsReducer';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contactData, setContactData] = useState({\n    contactName: '',\n    contactNumber: '',\n  });\n\n  useEffect(() => {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`Contact with name ${name} already exists!`);\n    } else {\n      dispatch(addContactThunk({ name, number }));\n      setContactData({\n        contactName: '',\n        contactNumber: '',\n      });\n    }\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setContactData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        <FormNames>Name: </FormNames>\n        <FormInput\n          type=\"text\"\n          name=\"contactName\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={contactData.contactName}\n          onChange={handleInputChange}\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <FormNames>Number: </FormNames>\n        <FormInput\n          type=\"tel\"\n          name=\"contactNumber\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={contactData.contactNumber}\n          onChange={handleInputChange}\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListContacts = styled.ul`\n  text-align: left;\n  margin: 0 auto;\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 10px;\n  padding: 15px;\n`;\n\nexport const ContactsItem = styled.li`\n  margin-bottom: 10px;\n  margin-top: 10px;\n  font-size: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ContactsName = styled.span``;\n\nexport const ContactsNumber = styled.span``;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 20px;\n  cursor: pointer;\n  background-color: tomato;\n  border-radius: 5px;\n  border: none;\n`;\n","import React from 'react';\nimport {\n  FormInput,\n  FormLabel,\n  FormNames,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst Filter = ({ setFilterText }) => {\n  const handleFilterChange = event => {\n    const newText = event.target.value;\n    setFilterText(newText);\n  };\n\n  return (\n    <FormLabel>\n      <FormNames>Find contacts by name</FormNames>\n      <FormInput type=\"text\" onChange={handleFilterChange} />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","import { useEffect, useState } from 'react';\nimport {\n  ContactsItem,\n  ContactsName,\n  ContactsNumber,\n  DeleteBtn,\n  ListContacts,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport {\n  deleteContactThunk,\n  requestContactsThunk,\n  selectContactsError,\n  selectContactsLoading,\n  selectUserContacts,\n} from 'redux/contactsReducer';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  const [filterText, setFilterText] = useState('');\n\n  useEffect(() => {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterText.toLowerCase())\n  );\n\n  return (\n    <>\n      <ListContacts>\n        <Filter setFilterText={setFilterText} />\n        {isLoading && <Loader />}\n        {error && <p>Oops, some error occured...{error}</p>}\n        {contacts.length > 0 &&\n          filteredContacts.map(({ id, name, number }) => {\n            return (\n              <ContactsItem key={id}>\n                <ContactsName>{name}: </ContactsName>\n                <ContactsNumber>{number}</ContactsNumber>\n                <DeleteBtn\n                  onClick={() => handleDeleteContact(id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  delete &times;\n                </DeleteBtn>\n                {!!error && <div>{error.message}</div>}\n              </ContactsItem>\n            );\n          })}\n      </ListContacts>\n    </>\n  );\n};\n\nexport default ContactList;\n","import Wrapper from 'components/Wrapper/Wrapper';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <Wrapper>\n      <h1>My contacts</h1>\n      <ContactForm />\n      <ContactList />\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormLabel","FormInput","FormNames","FormButton","Container","children","ContactForm","contacts","useSelector","selectUserContacts","dispatch","useDispatch","useState","contactName","contactNumber","contactData","setContactData","useEffect","requestContactsThunk","handleInputChange","event","target","name","value","prevData","onSubmit","preventDefault","form","currentTarget","elements","number","some","contact","alert","addContactThunk","type","title","onChange","required","ListContacts","ContactsItem","ContactsName","ContactsNumber","DeleteBtn","setFilterText","newText","isLoading","selectContactsLoading","error","selectContactsError","filterText","filteredContacts","filter","toLowerCase","includes","Loader","length","map","id","onClick","contactId","deleteContactThunk","message","Wrapper"],"sourceRoot":""}